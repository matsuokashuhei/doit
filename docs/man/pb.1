.TH PB 1 "January 2025" "pb 0.1.0" "User Commands"
.SH NAME
pb \- CLI progress bar tool for time-based visualization
.SH SYNOPSIS
.B pb
[\fIOPTION\fR]... [\fB\-\-start\fR \fISTART_TIME\fR] \fB\-\-end\fR \fIEND_TIME\fR
.SH DESCRIPTION
.B pb
is a command-line progress bar tool that visualizes the progress between two points in time. It displays a real-time progress bar showing elapsed time, remaining time, and completion percentage.

The tool supports multiple time formats including absolute dates, datetimes, and relative time expressions. It's useful for tracking deadlines, monitoring time-based processes, or simply visualizing time passage.

.SH OPTIONS
.TP
.BR \-s ", " \-\-start =\fISTART_TIME\fR
Specify the start time. Optional. When omitted, start time is automatically determined based on end time format. Accepts date (YYYY-MM-DD), datetime (YYYY-MM-DD HH:MM:SS), or relative time formats.
.TP
.BR \-e ", " \-\-end =\fIEND_TIME\fR
Specify the end time. Required. Accepts date (YYYY-MM-DD), datetime (YYYY-MM-DD HH:MM:SS), or relative time formats (Nh, Nm, Ns, Nd).
.TP
.BR \-i ", " \-\-interval =\fISECONDS\fR
Update interval in seconds. Default is 60. Controls how frequently the progress bar refreshes.
.TP
.BR \-h ", " \-\-help
Display help information and exit.
.TP
.BR \-V ", " \-\-version
Display version information and exit.

.SH TIME FORMATS
.B pb
supports three time format categories:

.SS Date Format
.B YYYY-MM-DD
.br
Example: 2025-01-27
.br
Time defaults to 00:00:00 (midnight) when only date is specified.

.SS Datetime Format
.B YYYY-MM-DD HH:MM:SS
.br
Example: 2025-01-27 14:30:00
.br
Full specification including hours, minutes, and seconds in 24-hour format.

.SS Relative Time Format
Used for end time to specify duration from start time:
.TP
.B Nh
Hours (e.g., 1h, 8h, 24h)
.TP
.B Nm
Minutes (e.g., 30m, 45m, 90m)
.TP
.B Ns
Seconds (e.g., 30s, 60s, 3600s)
.TP
.B Nd
Days (e.g., 1d, 7d, 30d)

.SH AUTOMATIC START TIME DETECTION
When the
.B \-\-start
option is omitted,
.B pb
automatically determines the start time based on the end time format:

.TP
.B Time-containing end formats
End times that include time components (colons, relative prefixes like "2h", "+30m") use the current time as start.

.TP
.B Date-only end formats
End times in YYYY-MM-DD format use today at 00:00:00 as start.

This feature makes
.B pb
more intuitive for common use cases like timers and countdowns.

.SH EXAMPLES
.TP
.B pb \-\-end "17:00:00"
Track remaining work day from now until 5 PM.

.TP
.B pb \-\-end "2h"
2-hour timer starting from current time.

.TP
.B pb \-\-end "2025-02-15"
Countdown to deadline from start of today.

.TP
.B pb \-\-start "2025-01-27 09:00:00" \-\-end "2025-01-27 17:00:00"
Track an 8-hour work day with default 60-second updates (traditional usage).

.TP
.B pb \-\-start "2025-01-27 14:00:00" \-\-end "1h" \-\-interval 30
Monitor a 1-hour meeting with 30-second update intervals (traditional usage).

.TP
.B pb \-\-start "2025-01-27" \-\-end "7d" \-\-interval 3600
Create a 7-day countdown with hourly updates (traditional usage).

.TP
.B pb \-\-start "2025-01-20" \-\-end "2025-02-15"
Track progress toward a project deadline (traditional usage).

.TP
.B pb \-\-start "2025-01-27 10:00:00" \-\-end "25m" \-\-interval 60
Pomodoro technique timer (25-minute focus session).

.SH OUTPUT
.B pb
displays different output depending on the terminal environment:

.SS TTY Mode (Interactive Terminal)
When running in a terminal, pb shows a dynamic progress bar that updates in place:
.br
.nf
pb - Progress Bar Tool
Start time: 2025-01-27 09:00:00
End time: 2025-01-27 17:00:00
Update interval: 60 seconds
Press Ctrl+C to exit

[████████░░░░░░░░░░░░░░░░░░░░] 32.5% (2h 36m elapsed, 5h 24m remaining)
.fi

.SS Non-TTY Mode (Redirected Output)
When output is redirected or piped, pb prints each update as a separate line:
.br
.nf
[████████░░░░░░░░░░░░░░░░░░░░] 32.5% (2h 36m elapsed, 5h 24m remaining)
[█████████░░░░░░░░░░░░░░░░░░░] 35.0% (2h 48m elapsed, 5h 12m remaining)
.fi

.SS Progress Bar Elements
.TP
.B █
Filled blocks representing completed time
.TP
.B ░
Empty blocks representing remaining time
.TP
.B Percentage
Exact completion percentage (0.0% to 100.0%+)
.TP
.B Time Information
Elapsed time and remaining time in human-readable format

.SS Color Coding
The progress bar uses colors to indicate status:
.TP
.B Green
Normal progress (0-80% completion)
.TP
.B Yellow
Nearing completion (80-100% completion)
.TP
.B Red
Overtime (>100% completion)

.SH EXIT STATUS
.B pb
exits with the following status codes:
.TP
.B 0
Success - progress monitoring completed normally
.TP
.B 1
Error - invalid arguments, time parsing failure, or runtime error

.SH SIGNALS
.TP
.B SIGINT (Ctrl+C)
Gracefully exit pb with cleanup. In TTY mode, pb actively monitors for Ctrl+C and provides clean shutdown.
.TP
.B SIGTERM
Terminate pb process immediately.

.SH ENVIRONMENT
.B pb
respects the following environment variables:
.TP
.B NO_COLOR
If set, disables colored output regardless of terminal capabilities.
.TP
.B TERM
Used to determine terminal capabilities for color and formatting support.

.SH FILES
.B pb
does not create or modify any files. All output goes to stdout/stderr.

.SH LIMITATIONS
.TP
.B Time Resolution
Progress updates are limited by the specified interval (default 60 seconds).
.TP
.B System Clock
Accuracy depends on system clock precision and stability.
.TP
.B Timezone
Uses local system timezone. Daylight saving time transitions may affect calculations.
.TP
.B Terminal Compatibility
Full visual experience requires ANSI color support and Unicode-capable fonts.

.SH TIPS
.TP
.B Update Intervals
Choose appropriate intervals: 1-10s for short tasks, 1-5m for medium tasks, 15m+ for long-term tracking.
.TP
.B Scripting
Use pipe output (\fBpb ... | cat\fR) for line-by-line updates in scripts.
.TP
.B Background Use
Run pb in background and monitor with \fBtail -f\fR for logging.
.TP
.B Multiple Timers
Run multiple pb instances in different terminals for concurrent time tracking.

.SH SEE ALSO
.BR date (1),
.BR sleep (1),
.BR timeout (1),
.BR crontab (1)

.SH BUGS
Report bugs at: https://github.com/matsuokashuhei/pb/issues

.SH AUTHOR
pb was written by the pb development team.

.SH COPYRIGHT
Copyright \(co 2025 pb contributors. Licensed under the MIT License.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

.SH EXAMPLES SECTION
For comprehensive usage examples, see:
.br
.I /usr/share/doc/pb/examples/
.br
or visit: https://github.com/matsuokashuhei/pb/tree/main/docs/examples