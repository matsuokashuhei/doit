---
name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        type: string

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    name: Build Release Assets
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: doit-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: doit-linux-aarch64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: doit-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: doit-macos-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: doit-windows-x86_64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-release-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-release-${{ matrix.target }}-
            ${{ runner.os }}-cargo-release-
            ${{ runner.os }}-cargo-

      - name: Install cross-compilation tools (Linux aarch64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

      - name: Prepare binary artifact
        run: |
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            cp target/${{ matrix.target }}/release/doit.exe target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          else
            cp target/${{ matrix.target }}/release/doit target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          fi
        shell: bash

      - name: Test binary functionality
        run: |
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            ./target/${{ matrix.target }}/release/${{ matrix.artifact_name }} --help
          elif [ "${{ matrix.target }}" != "aarch64-unknown-linux-gnu" ]; then
            ./target/${{ matrix.target }}/release/${{ matrix.artifact_name }} --help
          else
            echo "Skipping functionality test for cross-compiled ARM64 binary"
            # Verify the binary exists and has correct format
            file target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          fi
        shell: bash

      - name: Get tag name
        id: get_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          body: |
            ## Changes in ${{ steps.get_tag.outputs.tag }}

            - Build artifacts for multiple platforms
            - Cross-platform compatibility improvements
            - Performance optimizations and bug fixes

            ## Installation

            Download the appropriate binary for your platform from the assets below.

            ### Linux
            - `doit-linux-x86_64` - For 64-bit Intel/AMD processors
            - `doit-linux-aarch64` - For 64-bit ARM processors (e.g., Raspberry Pi 4, AWS Graviton)

            ### macOS
            - `doit-macos-x86_64` - For Intel Macs
            - `doit-macos-aarch64` - For Apple Silicon Macs (M1, M2, etc.)

            ### Windows
            - `doit-windows-x86_64.exe` - For 64-bit Windows systems

            ## Usage

            After downloading, make the binary executable (Linux/macOS):
            ```bash
            chmod +x doit-*
            ./doit-* --help
            ```

            For Windows, run directly:
            ```cmd
            doit-windows-x86_64.exe --help
            ```
          files: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          draft: false
          prerelease: false
